new_g <- graph_from_data_frame(d=only_sig,vertices=nodes_sig,directed= F)
graph <- visNetwork(nodes_sig, only_sig) %>% #main="Patterns of Monthly Changes in Air Passengers across Top Airport Cities",
#submain=list(text=paste0("Network constructed based on high correlations of monthly changes in air traffic of cities from ",
#month[start]," to ",month[end]," 2020."))) %>%
#footer = list(text=paste0("Only includes cities with a minimum 2020 air passenger traffic volume of: ", min_pop))) %>%
visIgraphLayout(layout = "layout_nicely",smooth=T,randomSeed=10) %>%
visEdges(arrows = "middle") %>%
addFontAwesome() %>%
visNodes(color=list(border="black")) %>%
visLegend(addNodes=nodes_unique,useGroups = F,ncol=1, position ="left",stepY = 150, zoom=F) %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
selectedBy="Division")
return(graph)
}
server3 <- function(input, output) {
citiesData <- reactive({
if(input$Origin_City == "All" & input$Destination_City == "All") {
planes_all %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else if(input$Origin_City == "All" & input$Destination_City != "All") {
planes_all %>%
filter(DEST_CITY_NAME == input$Destination_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else if (input$Origin_City != "All" & input$Destination_City == "All") {
planes_all %>%
filter(ORIGIN_CITY_NAME == input$Origin_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else {
planes_all %>%
filter(ORIGIN_CITY_NAME == input$Origin_City) %>%
filter(DEST_CITY_NAME == input$Destination_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
}
})
data3 <- reactive({
i <- match(input$Month1, month)
})
title <- reactive({
paste0("Monthly Change in Domestic Air Traffic Routes in ", input$Month1," 2020")
})
data4 <- reactive({
i <- match(input$Month2, month)
})
data5 <- reactive({
i <- match(input$Month3, month)
})
output$maps2 <- renderVisNetwork({
network(data4(),data5(),min_corr1,4)
})
output$hist2 <- renderPlot({
planesTop10Airlines %>%
filter(!AIRLINE == "Federal Express Corporation", !AIRLINE == "United Parcel Service") %>%
ggplot(aes(x = MONTH, y = PASSENGERS/1000000, fill = reorder(AIRLINE, -PASSENGERS), color = reorder(AIRLINE, -PASSENGERS))) +
geom_line() +
geom_point(shape=21, color="black", size=3) +
xlab("Month") +
ylab("Number of Passengers (in Millions)") +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("January","February",
"March","April","May","June",
"July", "August", "September",
"October", "November", "December")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "bold")) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, size = 10)) +
labs(fill = "Airline", color = "Airline")
})
output$maps <- renderPlot({
states_sf %>%
ggplot(aes()) +
geom_sf(fill = "grey36", color = "black")+
geom_sf(data=activate(net_perc,"edges") %>% st_as_sf() %>%
select(from,to,importance,local,MONTH,value)%>% filter(MONTH==data3()) %>%arrange(desc(value)),
aes(color=value,alpha=importance,size=importance/8)) +
geom_sf(data=activate(net_perc,"nodes") %>% st_as_sf(),
aes(size=ifelse(importance>=6,(importance/4) + .4,0.2)),colour="black")+
geom_sf(data=activate(net_perc,"nodes") %>% st_as_sf(),
aes(size=ifelse(importance>=6,importance/4,0.15)),colour="white")+
scale_color_gradient2(low="red",mid="white",high="blue",midpoint=0,limits=c(-100,100))+
#scale_colour_viridis_c("% Change in Monthly Passenger Volume",option = 'plasma', direction=-1, limits=c(-100,100)) +
scale_size_continuous(range = c(0.25,2))+
guides(alpha=F, size=F)+
facet_wrap(~local, nrow=2)+
theme_map()+
theme(legend.position = "bottom")+
#ggtitle(title())+
labs(#subtitle="Growth rates are capped at -100% and 100%",
caption="Cities and routes are sized by traffic volume.")
})
output$yearCities <- renderPlot({
citiesData() %>%
ggplot(aes(x = MONTH, y = avg)) +
geom_line(color = "steelblue") +
geom_point(shape=21, fill="steelblue1", size=3) +
xlab("Month") +
ylab("Number of Passengers") +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("January","February",
"March","April","May","June",
"July", "August", "September",
"October", "November", "December")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "bold")) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, size = 10))
})
output$sent1 <- renderPlot({
ggplot(valence, aes(x = airline, y = value, color = airline)) +
geom_violin( show.legend = FALSE) +
geom_boxplot(width=.1) +
scale_y_continuous(breaks = seq(-5, 5, by = 1)) +
labs(x = "Airlines", y = "AFINN Values") +
#ggtitle("Tweets Sentiment Value Distribution By Airlines") +
theme(plot.title = element_text(vjust=2, hjust = 0.5),
legend.position =  'none') +
scale_color_discrete()
})
output$sent2 <- renderPlot({
valence %>%
mutate(contribution = n * value) %>%
group_by(airline) %>%
slice_head(n = 5) %>%
arrange(((contribution))) %>%
mutate(word = reorder(word, contribution)) %>%
ggplot(aes(x = contribution, y = reorder(word, contribution),
fill = contribution > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~airline, ncol = 2, scales = "free") +
labs(x = "Sentiment Value * Number of Appearances",
y = 'Top 5 Words From Tweets') +
#ggtitle("Sentiment Value Weighted by Frequency of Words in Tweets") +
theme(plot.title = element_text(vjust=2, hjust = 0.5),
#axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 1),
legend.position =  'none') +
scale_fill_manual(values = c("firebrick2", "steelblue1"))
})
}
shinyApp(ui = ui7, server = server3)
network <- function(start=1,end=6,min_corr=0.9995, min_importance=6, min_pop=1e6){
month <- c("January","February","March","April","May","June")
nodes <- read_tsv("NODES_COORDINATES.tsv",
col_types = list(col_number(),
col_character(),
col_number(),
col_number()))
states <- read_csv("us_states.csv") %>% select(-State)
nodes <- nodes %>% filter(nodes$label %in% df_wider3$ORIGIN_CITY_NAME | nodes$label %in% df_wider3$DEST_CITY_NAME) %>%
mutate(id = 1:n())
nodes1 <- nodes %>% left_join(df_wider4,by=c("label"="City"))
cities_matrix <- nodes1 %>% filter(importance>= min_importance) %>% filter(annual >= min_pop) %>% select(label,importance, JAN:JUN)
corr <- cor(t(cities_matrix[,(start+2):(end+2)]))
upd_min_importance <- min(cities_matrix$importance)
labels <- tibble(label = cities_matrix$label, id = 1:length(cities_matrix$label))
cor_g <- graph_from_adjacency_matrix(corr, mode='undirected', weighted = 'correlation')
cor_edge_list <- get.data.frame(cor_g)
only_sig <- cor_edge_list[abs(cor_edge_list$correlation) > min_corr & abs(cor_edge_list$correlation) != 1, ]
dim(only_sig)
colors <- tibble(importance = 1:8, color = c("pink","purple","aquamarine","green","#8f99fb","peru","grey54","gold")) %>% filter(importance >= upd_min_importance)
nodes_sig <-  labels %>% left_join(cities_matrix,by="label") %>% left_join(colors,by="importance") %>% select(id,label,importance, color) %>%
mutate(title=label) %>%
mutate(state = unlist(str_extract_all(unlist(str_extract_all(label,", [A-Z]+")),"[A-Z]+"))) %>%
left_join(states,by=c("state"="State Code"))
nodes_unique <-  data.frame(label = as.character(1:8),
shape = c( "circle"), color = c("pink","purple","aquamarine","green","#8f99fb","peru","grey54","gold"), City = 1:8, size=50) %>%
filter(City >= upd_min_importance)  %>%
mutate(label = (8-upd_min_importance+1):1) %>%
arrange(label) %>%
mutate(label = paste0("Air Volume Level: ",label))
new_g <- graph_from_data_frame(d=only_sig,vertices=nodes_sig,directed= F)
graph <- visNetwork(nodes_sig, only_sig) %>% #main="Patterns of Monthly Changes in Air Passengers across Top Airport Cities",
#submain=list(text=paste0("Network constructed based on high correlations of monthly changes in air traffic of cities from ",
#month[start]," to ",month[end]," 2020."))) %>%
#footer = list(text=paste0("Only includes cities with a minimum 2020 air passenger traffic volume of: ", min_pop))) %>%
visIgraphLayout(layout = "layout_nicely",smooth=T,randomSeed=10) %>%
visEdges(arrows = "middle") %>%
addFontAwesome() %>%
visNodes(color=list(border="black")) %>%
visLegend(addNodes=nodes_unique,useGroups = F,ncol=1, position ="left",stepY = 150, zoom=F) %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
selectedBy="Division")
return(graph)
}
server3 <- function(input, output) {
citiesData <- reactive({
if(input$Origin_City == "All" & input$Destination_City == "All") {
planes_all %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else if(input$Origin_City == "All" & input$Destination_City != "All") {
planes_all %>%
filter(DEST_CITY_NAME == input$Destination_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else if (input$Origin_City != "All" & input$Destination_City == "All") {
planes_all %>%
filter(ORIGIN_CITY_NAME == input$Origin_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else {
planes_all %>%
filter(ORIGIN_CITY_NAME == input$Origin_City) %>%
filter(DEST_CITY_NAME == input$Destination_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
}
})
data3 <- reactive({
i <- match(input$Month1, month)
})
title <- reactive({
paste0("Monthly Change in Domestic Air Traffic Routes in ", input$Month1," 2020")
})
data4 <- reactive({
i <- match(input$Month2, month)
})
data5 <- reactive({
i <- match(input$Month3, month)
})
output$maps2 <- renderVisNetwork({
network(data4(),data5(),min_corr1,4)
})
output$hist2 <- renderPlot({
planesTop10Airlines %>%
filter(!AIRLINE == "Federal Express Corporation", !AIRLINE == "United Parcel Service") %>%
ggplot(aes(x = MONTH, y = PASSENGERS/1000000, fill = reorder(AIRLINE, -PASSENGERS), color = reorder(AIRLINE, -PASSENGERS))) +
geom_line() +
geom_point(shape=21, color="black", size=3) +
xlab("Month") +
ylab("Number of Passengers (in Millions)") +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("January","February",
"March","April","May","June",
"July", "August", "September",
"October", "November", "December")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "bold")) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, size = 10)) +
labs(fill = "Airline", color = "Airline")
})
output$maps <- renderPlot({
states_sf %>%
ggplot(aes()) +
geom_sf(fill = "grey36", color = "black")+
geom_sf(data=activate(net_perc,"edges") %>% st_as_sf() %>%
select(from,to,importance,local,MONTH,value)%>% filter(MONTH==data3()) %>%arrange(desc(value)),
aes(color=value,alpha=importance,size=importance/8)) +
geom_sf(data=activate(net_perc,"nodes") %>% st_as_sf(),
aes(size=ifelse(importance>=6,(importance/4) + .4,0.2)),colour="black")+
geom_sf(data=activate(net_perc,"nodes") %>% st_as_sf(),
aes(size=ifelse(importance>=6,importance/4,0.15)),colour="white")+
scale_color_gradient2(low="red",mid="white",high="blue",midpoint=0,limits=c(-100,100))+
#scale_colour_viridis_c("% Change in Monthly Passenger Volume",option = 'plasma', direction=-1, limits=c(-100,100)) +
scale_size_continuous(range = c(0.25,2))+
guides(alpha=F, size=F)+
facet_wrap(~local, nrow=2)+
theme_map()+
theme(legend.position = "bottom")+
#ggtitle(title())+
labs(#subtitle="Growth rates are capped at -100% and 100%",
caption="Cities and routes are sized by traffic volume.")
})
output$yearCities <- renderPlot({
citiesData() %>%
ggplot(aes(x = MONTH, y = avg)) +
geom_line(color = "steelblue") +
geom_point(shape=21, fill="steelblue1", size=3) +
xlab("Month") +
ylab("Number of Passengers") +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("January","February",
"March","April","May","June",
"July", "August", "September",
"October", "November", "December")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "bold")) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, size = 10))
})
output$sent1 <- renderPlot({
ggplot(valence, aes(x = airline, y = value, color = airline)) +
geom_violin( show.legend = FALSE) +
geom_boxplot(width=.1) +
scale_y_continuous(breaks = seq(-5, 5, by = 1)) +
labs(x = "Airlines", y = "AFINN Values") +
#ggtitle("Tweets Sentiment Value Distribution By Airlines") +
theme(plot.title = element_text(vjust=2, hjust = 0.5),
legend.position =  'none') +
scale_color_discrete()
})
output$sent2 <- renderPlot({
valence %>%
mutate(contribution = n * value) %>%
group_by(airline) %>%
slice_head(n = 5) %>%
arrange(((contribution))) %>%
mutate(word = reorder(word, contribution)) %>%
ggplot(aes(x = contribution, y = reorder(word, contribution),
fill = contribution > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~airline, ncol = 2, scales = "free") +
labs(x = "Sentiment Value * Number of Appearances",
y = 'Top 5 Words From Tweets') +
#ggtitle("Sentiment Value Weighted by Frequency of Words in Tweets") +
theme(plot.title = element_text(vjust=2, hjust = 0.5),
#axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 1),
legend.position =  'none') +
scale_fill_manual(values = c("firebrick2", "steelblue1"))
})
}
shinyApp(ui = ui7, server = server3)
network <- function(start=1,end=6,min_corr=0.9995, min_importance=6, min_pop=1e6){
month <- c("January","February","March","April","May","June")
nodes <- read_tsv("NODES_COORDINATES.tsv",
col_types = list(col_number(),
col_character(),
col_number(),
col_number()))
states <- read_csv("us_states.csv") %>% select(-State)
nodes <- nodes %>% filter(nodes$label %in% df_wider3$ORIGIN_CITY_NAME | nodes$label %in% df_wider3$DEST_CITY_NAME) %>%
mutate(id = 1:n())
nodes1 <- nodes %>% left_join(df_wider4,by=c("label"="City"))
cities_matrix <- nodes1 %>% filter(importance>= min_importance) %>% filter(annual >= min_pop) %>% select(label,importance, JAN:JUN)
corr <- cor(t(cities_matrix[,(start+2):(end+2)]))
upd_min_importance <- min(cities_matrix$importance)
labels <- tibble(label = cities_matrix$label, id = 1:length(cities_matrix$label))
cor_g <- graph_from_adjacency_matrix(corr, mode='undirected', weighted = 'correlation')
cor_edge_list <- get.data.frame(cor_g)
only_sig <- cor_edge_list[abs(cor_edge_list$correlation) > min_corr & abs(cor_edge_list$correlation) != 1, ]
dim(only_sig)
colors <- tibble(importance = 1:8, color = c("pink","purple","aquamarine","green","#8f99fb","peru","silver","gold")) %>% filter(importance >= upd_min_importance)
nodes_sig <-  labels %>% left_join(cities_matrix,by="label") %>% left_join(colors,by="importance") %>% select(id,label,importance, color) %>%
mutate(title=label) %>%
mutate(state = unlist(str_extract_all(unlist(str_extract_all(label,", [A-Z]+")),"[A-Z]+"))) %>%
left_join(states,by=c("state"="State Code"))
nodes_unique <-  data.frame(label = as.character(1:8),
shape = c( "circle"), color = c("pink","purple","aquamarine","green","#8f99fb","peru","silver","gold"), City = 1:8, size=50) %>%
filter(City >= upd_min_importance)  %>%
mutate(label = (8-upd_min_importance+1):1) %>%
arrange(label) %>%
mutate(label = paste0("Air Volume Level: ",label))
new_g <- graph_from_data_frame(d=only_sig,vertices=nodes_sig,directed= F)
graph <- visNetwork(nodes_sig, only_sig) %>% #main="Patterns of Monthly Changes in Air Passengers across Top Airport Cities",
#submain=list(text=paste0("Network constructed based on high correlations of monthly changes in air traffic of cities from ",
#month[start]," to ",month[end]," 2020."))) %>%
#footer = list(text=paste0("Only includes cities with a minimum 2020 air passenger traffic volume of: ", min_pop))) %>%
visIgraphLayout(layout = "layout_nicely",smooth=T,randomSeed=10) %>%
visEdges(arrows = "middle") %>%
addFontAwesome() %>%
visNodes(color=list(border="black")) %>%
visLegend(addNodes=nodes_unique,useGroups = F,ncol=1, position ="left",stepY = 150, zoom=F) %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
selectedBy="Division")
return(graph)
}
server3 <- function(input, output) {
citiesData <- reactive({
if(input$Origin_City == "All" & input$Destination_City == "All") {
planes_all %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else if(input$Origin_City == "All" & input$Destination_City != "All") {
planes_all %>%
filter(DEST_CITY_NAME == input$Destination_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else if (input$Origin_City != "All" & input$Destination_City == "All") {
planes_all %>%
filter(ORIGIN_CITY_NAME == input$Origin_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
} else {
planes_all %>%
filter(ORIGIN_CITY_NAME == input$Origin_City) %>%
filter(DEST_CITY_NAME == input$Destination_City) %>%
filter(YEAR >= input$year[1]) %>%
filter(YEAR <= input$year[2]) %>%
group_by(MONTH) %>%
summarise(avg = mean(PASSENGERS))
}
})
data3 <- reactive({
i <- match(input$Month1, month)
})
title <- reactive({
paste0("Monthly Change in Domestic Air Traffic Routes in ", input$Month1," 2020")
})
data4 <- reactive({
i <- match(input$Month2, month)
})
data5 <- reactive({
i <- match(input$Month3, month)
})
output$maps2 <- renderVisNetwork({
network(data4(),data5(),min_corr1,4)
})
output$hist2 <- renderPlot({
planesTop10Airlines %>%
filter(!AIRLINE == "Federal Express Corporation", !AIRLINE == "United Parcel Service") %>%
ggplot(aes(x = MONTH, y = PASSENGERS/1000000, fill = reorder(AIRLINE, -PASSENGERS), color = reorder(AIRLINE, -PASSENGERS))) +
geom_line() +
geom_point(shape=21, color="black", size=3) +
xlab("Month") +
ylab("Number of Passengers (in Millions)") +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("January","February",
"March","April","May","June",
"July", "August", "September",
"October", "November", "December")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "bold")) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, size = 10)) +
labs(fill = "Airline", color = "Airline")
})
output$maps <- renderPlot({
states_sf %>%
ggplot(aes()) +
geom_sf(fill = "grey36", color = "black")+
geom_sf(data=activate(net_perc,"edges") %>% st_as_sf() %>%
select(from,to,importance,local,MONTH,value)%>% filter(MONTH==data3()) %>%arrange(desc(value)),
aes(color=value,alpha=importance,size=importance/8)) +
geom_sf(data=activate(net_perc,"nodes") %>% st_as_sf(),
aes(size=ifelse(importance>=6,(importance/4) + .4,0.2)),colour="black")+
geom_sf(data=activate(net_perc,"nodes") %>% st_as_sf(),
aes(size=ifelse(importance>=6,importance/4,0.15)),colour="white")+
scale_color_gradient2(low="red",mid="white",high="blue",midpoint=0,limits=c(-100,100))+
#scale_colour_viridis_c("% Change in Monthly Passenger Volume",option = 'plasma', direction=-1, limits=c(-100,100)) +
scale_size_continuous(range = c(0.25,2))+
guides(alpha=F, size=F)+
facet_wrap(~local, nrow=2)+
theme_map()+
theme(legend.position = "bottom")+
#ggtitle(title())+
labs(#subtitle="Growth rates are capped at -100% and 100%",
caption="Cities and routes are sized by traffic volume.")
})
output$yearCities <- renderPlot({
citiesData() %>%
ggplot(aes(x = MONTH, y = avg)) +
geom_line(color = "steelblue") +
geom_point(shape=21, fill="steelblue1", size=3) +
xlab("Month") +
ylab("Number of Passengers") +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("January","February",
"March","April","May","June",
"July", "August", "September",
"October", "November", "December")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "bold")) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, size = 10))
})
output$sent1 <- renderPlot({
ggplot(valence, aes(x = airline, y = value, color = airline)) +
geom_violin( show.legend = FALSE) +
geom_boxplot(width=.1) +
scale_y_continuous(breaks = seq(-5, 5, by = 1)) +
labs(x = "Airlines", y = "AFINN Values") +
#ggtitle("Tweets Sentiment Value Distribution By Airlines") +
theme(plot.title = element_text(vjust=2, hjust = 0.5),
legend.position =  'none') +
scale_color_discrete()
})
output$sent2 <- renderPlot({
valence %>%
mutate(contribution = n * value) %>%
group_by(airline) %>%
slice_head(n = 5) %>%
arrange(((contribution))) %>%
mutate(word = reorder(word, contribution)) %>%
ggplot(aes(x = contribution, y = reorder(word, contribution),
fill = contribution > 0)) +
geom_col(show.legend = FALSE) +
facet_wrap(~airline, ncol = 2, scales = "free") +
labs(x = "Sentiment Value * Number of Appearances",
y = 'Top 5 Words From Tweets') +
#ggtitle("Sentiment Value Weighted by Frequency of Words in Tweets") +
theme(plot.title = element_text(vjust=2, hjust = 0.5),
#axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 1),
legend.position =  'none') +
scale_fill_manual(values = c("firebrick2", "steelblue1"))
})
}
shinyApp(ui = ui7, server = server3)
shinyApp(ui = ui7, server = server3)
deployApp()
